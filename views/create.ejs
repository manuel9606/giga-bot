<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Crear Usuario</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
        }

        header {
            background-color: #f2f2f2;
            padding: 20px 0;
            text-align: center;
        }

     
        .user-form {
            max-width: 600px;
            margin: 50px auto;
            padding: 20px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }

        .form-container {
            margin-bottom: 20px;
        }

        .form-group label {
            display: block;
            margin-bottom: 5px;
        }

        .form-group input,
        .form-group select,
        .form-group textarea {
            width: 100%;
            padding: 8px;
            border-radius: 4px;
            border: 1px solid #ccc;
            margin-bottom: 10px;
        }

        .user-form button[type="button"],
        .user-form input[type="submit"] {
            display: inline-block;
            padding: 8px 15px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        #error-message {
            margin-top: 10px;
        }

        body {
      font-family: Arial, sans-serif;
      background-color: #f2f2f2;
      margin: 0;
      padding: 20px;
    }
    
    h1 {
      text-align: center;
      color: #333;
    }
    
    form {
      max-width: 420px;
      margin: 50px auto;
      padding: 20px;
      border: 3px solid #ccc;
      border-radius: 5px;
      background-color: #fff;
    }
    
    form h2 {
      font-size: 18px;
      margin-bottom: 10px;
      color: #333;
    }
    
    label {
      display: block;
      margin-bottom: 12px;
      color: #666;
      font-size: 15px;
    }
    
    input[type="text"],
    input[type="number"],
    input[type="date"],
    textarea {
      width: 90%;
      padding: 8px;
      border: 1px solid #ccc;
      border-radius: 4px;
      box-sizing: border-box;
      font-size: 15px;
      margin-bottom: 12px;
    }
    
    textarea {
      height: 100px;
    }
    
    input[type="submit"] {
      background-color: #333;
      color: #fff;
      border: none;
      padding: 10px 20px;
      font-size: 16px;
      cursor: pointer;
    }
    
    input[type="submit"]:hover {
      background-color: #555;
    }

    .hidden {
        display: none;
    }
    header {
      background-color: #e9e9e9;
      color: #021894;
      padding: 20px;
    }
    
    h1 {
      margin: 0;
    }
    
    /* Navegación */
nav {
  background-color: #0477f1;
  padding: 10px 0;
}

nav ul {
  list-style: none;
  display: flex;
  justify-content: center;
}

nav ul li {
  margin: 0 10px;
}

nav a {
  text-decoration: none;
  color: #fff;
  font-weight: bold;
  transition: color 0.3s;
}

nav a:hover {
  color: #0056b3;
}
 #mensaje {
      display: none;
      color: red;
      margin-top: 10px;
    }
    
     .hidden { display: none; }
        .error { color: red; }
</style>
</head>
<body>
  <header>

  </header>
  
  <nav>
    <ul>
      <li><a href="/menu">MENÚ</a></li>
      
      <!-- Agrega más elementos de lista según tus rutas -->
    </ul>
  </nav>
</body>
<div class="user-form">
  
  





  <h1>Crear Usuario</h1>
  <form action="/users/agregar" method="POST">

      <div class="form-container" id="firstForm">
          <div class="form-group">

              <input type="text" name="apellidos" placeholder="Apellidos (requerido)" required>
              <input type="text" name="nombres" placeholder="Nombres (requerido)" required>
               <input type="number" name="dni" placeholder="dni (requerido)" required>
             
    <input type="text" name="direccion" id="direccion" placeholder="Dirección (requerido)" required oninput="mostrarNodo()">
      <span id="direccion-error" class="error"></span>
    
              <label for="nodo">Nodo:</label>
    <input type="text" id="nodo" name="nodo" readonly>
              <input type="number" name="telefono" placeholder="Teléfono (opcional)">
              <select name="vivienda" required>
                  <option value="propia">Propia</option>
                  <option value="alquilada">Alquilada</option>
                  <option value="local">Local</option>
              </select>
          </div>
          <button type="button" onclick="showSecondForm()">Siguiente</button>
      </div>

      <div class="form-container hidden" id="secondForm">

        <h1>Datos CABLE </h1>

          <label for="estado_cable">Estado:</label>
          <select name="estado_cable" id="estado_cable">
              <option value="">Seleccione...</option>
              <option value="Act">Activar</option>
          </select>

          <p></p>
          <label for="servicio">Servicio:</label>
          <select name="servicio" id="servicio">
              <option value="">Seleccione...</option>
              <option value="cable">cable</option>
          </select>

          <p></p>
          <label for="fecha_instalacion">Fecha Instalación:</label>
          <input type="date" name="fecha_instalacion" id="fecha_instalacion">

          <label for="senal">Señal:</label>
          <select name="senal" id="senal" onchange="actualizarMensualidad()">
              <option value="">Seleccione...</option>
              <option value="Analogico">Analógico</option>
              <option value="Digital">Digital</option>
          </select>
          <p></p>
          <label for="tipo_servicio">Tipo de Servicio:</label>
          <select name="tipo_servicio" id="tipo_servicio" onchange="actualizarMensualidad()">
            <option value="">Seleccione...</option>
            <option value="Basico">Básico</option>
            <option value="Comercio">Comercio</option>
          </select>


          <p></p>  
          <label for="precio">Mensualidad:</label>
          <input type="number" name="precio" id="precio" readonly value="0">
          
          <p></p>
        
          
          <label for="num_decos">Número de Decos:</label>
          <input type="number" name="num_decos" id="num_decos" onchange="generarEntradasDecos(); actualizarMensualidad()">

          <div id="decos_container"></div>
            <p></p>
            
        <label for="inscripcion_cable">Inscripción Cable:</label>
        <input type="number" name="inscripcion_cable" id="inscripcion_cable" step="0.01" value="0.00">

        <label for="costo_materiales_cable">Costo Materiales Cable:</label>
        <input type="number" name="costo_materiales_cable" id="costo_materiales_cable" step="0.01" value="0.00">
           <p></p>
          

          <label for="descripcion_catv">Descripción:</label>
          <textarea name="descripcion_catv" id="descripcion_catv" rows="4" cols="50"></textarea>

          <button type="button" onclick="showFirstForm()">Anterior</button>
          <button type="button" onclick="showThirdForm()">Siguiente</button>
         
          
      </div>

      <div class="form-container hidden" id="thirdForm">
        

          <h1>Datos Internet</h1>
          
           <label for="estado_internet">Estado:</label>
          <select name="estado_internet" id="estado_internet">
  <option value="">Seleccione...</option>
  <option value="Act">Activar</option>
</select>

          <p> </p><label for="tipo_servicio2">Tipo de servicio:</label>
          <select name="tipo_servicio2" id="tipo_servicio2">
              <option value="">Seleccione...</option>
              <option value="Internet">Internet</option>
          </select>


          <p> </p><label for="instalacion_int">Fecha Inscripción:</label>
          <input type="date" name="instalacion_int" id="instalacion_int">

          
          
          
          
<label for="velocidad">Velocidad:</label>
<select name="velocidad" id="velocidad" onchange="actualizarPrecio()">
  <option value="">Seleccione...</option>
  <% velocidades.forEach(vel => { %>
    <option value="<%= vel.velocidad %>" data-precio="<%= vel.precio %>"><%= vel.velocidad %></option>
  <% }) %>
</select>

<label for="precio2">Mensualidad:</label>
<input type="number" name="precio2" id="precio2" readonly value="0">

        <p></p>
      <label for="inscripcion_internet">Inscripción Internet:</label>
        <input type="number" name="inscripcion_internet" id="inscripcion_internet" step="0.01" value="0.00">

        <label for="costo_materiales_internet">Costo Materiales Internet:</label>
        <input type="number" name="costo_materiales_internet" id="costo_materiales_internet" step="0.01" value="0.00">
          
         
          
           <p></p>
          
          <label for="tipo_onu">Tipo de ONU:</label>
          <select name="tipo_onu" id="tipo_onu">
              <option value="">Seleccione...</option>
              <option value="tplink">TP-Link</option>
              <option value="huawei">Huawei</option>
              <option value="zte">ZTE</option>
              <option value="fiberhome">Fiberhome</option>
             
               <option value="xpon">XPON</option>
              <option value="otro">Otro</option>
          </select>

          <p></p>
          <label for="MAC">MAC:</label>
          <input type="text" id="MAC" name="MAC">

          <label for="usuario">Usuario Wi-Fi:</label>
          <input type="text" id="usuario" name="usuario">

          <label for="contrasena">Contraseña Wi-Fi:</label>
          <input type="text" id="contrasena" name="contrasena">

          <label for="ppp_name">PPP Name:</label>
          <input type="text" id="ppp_name" name="ppp_name">

          <label for="ppp_password">PPP Password:</label>
          <input type="text" id="ppp_password" name="ppp_password">

          <label for="nro_tarjeta">Número de Tarjeta:</label>
<select id="nro_tarjeta" name="nro_tarjeta">
  <option value="">Seleccione...</option>
 <option value="1">1</option>
<option value="2">2</option>
<option value="3">3</option>
<option value="4">4</option>
<option value="5">5</option>
<option value="6">6</option>
<option value="7">7</option>
<option value="8">8</option>
<option value="9">9</option>
<option value="10">10</option>
<option value="11">11</option>
<option value="12">12</option>
<option value="13">13</option>
<option value="14">14</option>
<option value="15">15</option>
<option value="16">16</option>

</select>

<p></p>
<label for="nro_puerto">Número de Puerto:</label>
<select id="nro_puerto" name="nro_puerto">
  <option value="">Seleccione...</option>
  <option value="1">1</option>
  <option value="2">2</option>
  <option value="3">3</option>
  <option value="4">4</option>
  <option value="5">5</option>
  <option value="6">6</option>
  <option value="7">7</option>
  <option value="8">8</option>
  <option value="9">9</option>
  <option value="10">10</option>
  <option value="11">11</option>
  <option value="12">12</option>
  <option value="13">13</option>
  <option value="14">14</option>
  <option value="15">15</option>
  <option value="16">16</option>
</select>

<p></p>
          <label for="descripcion_int">Descripción:</label>
          <textarea name="descripcion_int" id="descripcion_int" rows="4" cols="50"></textarea>
          <button type="button" onclick="showFirstForm()">Anterior</button>
            <input type="submit" value="Guardar">
        </div>
  </form>

  <div id="error-message" style="color: red;"></div>
</div>



<script>


function mostrarNodo() {
    const direccionInput = document.getElementById('direccion');
    const mensaje = document.getElementById('mensaje');
    const value = direccionInput.value;

    const grRegex = /gr\s*(\d+)/i;
    const match = value.match(grRegex);

    if (match && parseInt(match[1], 10) >= 10) {
      mensaje.style.display = 'block';
    } else {
      mensaje.style.display = 'none';
    }
  }






function validarFormulario() {
  const estadoCable = document.getElementById('estado_cable').value;
  const servicio = document.getElementById('servicio').value;
  const senal = document.getElementById('senal').value;
  const tipoServicio = document.getElementById('tipo_servicio').value;
  const fechaInstalacion = document.getElementById('fecha_instalacion').value;
  
  
  


  // Verificar si alguno de los campos ya no tiene el valor "Seleccione..."
  if (estadoCable !== "" || servicio !== "" || senal !== "" || tipoServicio !== "") {
    // Si alguno es seleccionado, los demás campos deben ser obligatorios
    if (estadoCable === "") {
      alert("Por favor, seleccione el estado del cable.");
      return false;
    }
    if (servicio === "") {
      alert("Por favor, seleccione el servicio de cable.");
      return false;
    }
    if (senal === "") {
      alert("Por favor, seleccione la señal de cable.");
      return false;
    }
    if (tipoServicio === "") {
      alert("Por favor, seleccione el tipo de servicio de cable.");
      return false;
    }
    if (fechaInstalacion === "") {
      alert("Por favor, ingrese la fecha de instalación de  cable.");
      return false;
    }
  }

  // Si todo está bien, permitir el envío del formulario
  return true;
}




// Asignar la función de validación al evento submit
document.querySelector('form').onsubmit = validarFormulario;











function actualizarPrecio() {
  var select = document.getElementById("velocidad");
  var precioSeleccionado = select.options[select.selectedIndex].getAttribute("data-precio");
  document.getElementById("precio2").value = precioSeleccionado || "0";
}





function updateActivacionCable() {
  // Obtener el valor de fecha_instalacion
  const fechaInstalacion = document.getElementById('fecha_instalacion').value;

  // Asignar el mismo valor a activacion_cable
  document.getElementById('activacion_cable').value = fechaInstalacion;
}




function updateActivacionInternet() {
  // Obtener el valor de instalacion_int
  const fechaInscripcion = document.getElementById('instalacion_int').value;

  // Asignar el mismo valor a activacion_internet
  document.getElementById('activacion_internet').value = fechaInscripcion;
}





 function showSecondForm() {
          const direccion = document.getElementById('direccion').value;
          if (direccion) {
              verificarDireccion(direccion, (existe) => {
                  if (existe) {
                      document.getElementById('direccion-error').innerText = 'La dirección ya existe';
                  } else {
                      document.getElementById('firstForm').classList.add('hidden');
                      document.getElementById('secondForm').classList.remove('hidden');
                  }
              });
          } else {
              document.getElementById('direccion-error').innerText = 'Por favor, ingrese una dirección';
          }
      }

function showThirdForm() {
    document.getElementById('secondForm').classList.add('hidden');
    document.getElementById('thirdForm').classList.remove('hidden');
    document.getElementById('firstForm').classList.add('hidden');
}

function showFirstForm() {
    document.getElementById('secondForm').classList.remove('hidden');
    document.getElementById('firstForm').classList.remove('hidden');
    document.getElementById('thirdForm').classList.add('hidden');
}





      function generarEntradasDecos() {
          var numDecos = document.getElementById('num_decos').value;
          var decosContainer = document.getElementById('decos_container');
          decosContainer.innerHTML = ''; // Limpiar el contenedor

          if (numDecos > 0) {
              for (var i = 1; i <= numDecos; i++) {
                  var cardLabel = document.createElement('label');
                  cardLabel.setAttribute('for', 'card_number_' + i);
                  cardLabel.innerText = 'Card Number ' + i + ':';
                  decosContainer.appendChild(cardLabel);

                  var cardInput = document.createElement('input');
                  cardInput.setAttribute('name', 'card_number_' + i);
                  cardInput.setAttribute('id', 'card_number_' + i);
                  cardInput.setAttribute('value', '600600');
                  decosContainer.appendChild(cardInput);

                  var breakElement = document.createElement('br');
                  decosContainer.appendChild(breakElement);

                  var stbLabel = document.createElement('label');
                  stbLabel.setAttribute('for', 'STB_id_' + i);
                  stbLabel.innerText = 'STB ID ' + i + ':';
                  decosContainer.appendChild(stbLabel);

                  var stbInput = document.createElement('input');
                  stbInput.setAttribute('name', 'STB_id_' + i);
                  stbInput.setAttribute('id', 'STB_id_' + i);
                  stbInput.setAttribute('value', '2010');
                  decosContainer.appendChild(stbInput);

                  var breakElement2 = document.createElement('br');
                  decosContainer.appendChild(breakElement2);

                  var decoLabel = document.createElement('label');
                  decoLabel.setAttribute('for', 'nro_deco_' + i);
                  decoLabel.innerText = 'Nro Deco ' + i + ':';
                  decosContainer.appendChild(decoLabel);

                  var decoInput = document.createElement('input');
                  decoInput.setAttribute('name', 'nro_deco_' + i);
                  decoInput.setAttribute('id', 'nro_deco_' + i);
                  decoInput.setAttribute('value', '0');
                  decosContainer.appendChild(decoInput);

                  var breakElement3 = document.createElement('br');
                  decosContainer.appendChild(breakElement3);
              }
          }
      }







      function mostrarNodo() {
          const direccion = document.getElementById('direccion').value.toLowerCase();
          let nodo = document.getElementById('nodo');

          if (direccion.includes('sec 6 gr 1 ') || direccion.endsWith('sec 6 gr 1') || 
              direccion.includes('sec 6 gr 1a') || 
              direccion.includes('sec 6 gr 2 ') || direccion.endsWith('sec 6 gr 2') ||
              direccion.includes('sec 6 gr 2a') || 
              direccion.includes('sec 6 gr 3 ') || direccion.endsWith('sec 6 gr 3') ||
              direccion.includes('sec 6 gr 3a') || 
              direccion.includes('sec 6 gr 11') || 
              direccion.includes('asoc sjm')) {
              nodo.value = 'nodo 1';
          } else if (direccion.includes('sec 6 gr 4 ')  ||
                     direccion.includes('sec 6 gr 4a') || 
                     direccion.includes('sec 6 gr 5 ') ||
                     direccion.includes('sec 6 gr 5a')) {
              nodo.value = 'nodo A';
          } else if (direccion.includes('sec 6 gr 12') || direccion.includes('sec 6 gr 13')) {
              nodo.value = 'nodo B';
          } else if (direccion.includes('sec 6 gr 6') || 
                     direccion.includes('sec 6 gr 6a')) {
              nodo.value = 'nodo C';
          } else if (direccion.includes('sec 6 gr 9') || 
                     direccion.includes('sec 6 gr 10')) {
              nodo.value = 'nodo D';  
          } else if (direccion.includes('sec 6a gr 1')) {
              nodo.value = 'nodo E';  
          } else if (direccion.includes('vrg cand')  ||
                     direccion.includes('max uhle') || 
                     direccion.includes('20 de oct ')) {
              nodo.value = 'nodo 1B';
          } else if (direccion.includes('pachac b4')  ||
                     direccion.includes('qda') || 
                     direccion.includes('aires ')) {
              nodo.value = 'nodo 2';
          } else if (direccion.includes('pachac b3')) {
              nodo.value = 'nodo 3';
          } else if (direccion.includes('edil')  ||
                     direccion.includes('jrd') || 
                     direccion.includes('los laureles ')) {
              nodo.value = 'nodo 4';
          } else if (direccion.includes('sec 10 gr 1')  ||
                     direccion.includes('sec 10 gr 2') || 
                     direccion.includes('sec 10 gr 3 ')) {
              nodo.value = 'nodo 5';
          } else if (direccion.includes('sec 10 gr 3a')  ||
                     direccion.includes('sec 10 gr 4 ')) {
              nodo.value = 'nodo 6';
          } else if (direccion.includes('sec 9 gr 3')  ||
                     direccion.includes('sec 9 gr 4') || 
                     direccion.includes('sec 9 gr 5 ')) {
              nodo.value = 'nodo 7';
          } else if (direccion.includes('sec 7 gr 3')  ||
                     direccion.includes('sec 7 gr 3a ')) {
              nodo.value = 'nodo 8';   
          } else if (direccion.includes('sec 7 gr 1')  ||
                     direccion.includes('sec 7 gr 2a') || 
                     direccion.includes('sec 7 gr 2') || 
                     direccion.includes('sec 7 gr 1a ')) {
              nodo.value = 'nodo 9';   
          } else if (direccion.includes('sec 9 gr 1')  ||
                     direccion.includes('sec 9 gr 2 ')) {
              nodo.value = 'nodo 10';       
              
               } else if (direccion.includes('encantada')) {
              nodo.value = 'nodo 11';
          } else {
              nodo.value = 'nodo desconocido';
          }
      }











function actualizarMensualidad() {
  const tipoServicio = document.getElementById('tipo_servicio').value;
  const senal = document.getElementById('senal').value;
  const decos = parseInt(document.getElementById('num_decos').value); // Parsear a entero

  let mensualidad = 0;

  if (tipoServicio === 'Basico') {
      mensualidad = 50.0;
  } else if (tipoServicio === 'Comercio') {
      mensualidad = 35.0;
  }

  if (senal === 'Digital' && decos > 2) {
      mensualidad = 50.0 + (decos - 2) * 12.0; // Si es Digital y hay más de 2 decodificadores
  }

  document.getElementById('precio').value = mensualidad.toFixed(2);
}


     function verificarDireccion(direccion, callback) {
          const xhr = new XMLHttpRequest();
          xhr.open('POST', '/verificar-direccion', true);
          xhr.setRequestHeader('Content-Type', 'application/json;charset=UTF-8');
          xhr.onreadystatechange = function () {
              if (xhr.readyState === 4 && xhr.status === 200) {
                  const response = JSON.parse(xhr.responseText);
                  callback(response.existe);
              }
          };
          xhr.send(JSON.stringify({ direccion }));
      }



  


</script>